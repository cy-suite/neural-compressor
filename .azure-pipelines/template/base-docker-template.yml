
parameters:
- name: repo
  type: string
  default: 'https://github.com/VincyZhang/neural-compressor'
- name: repoName
  type: string
  default: 'neural-compressor'
- name: repoTag
  type: string
  default: 'py38'
- name: dockerFileName
  type: string
  default: 'Dockerfile'
- name: containerConfigName
  type: string
  default: 'commonContainer'  
- name: containerName
  type: string

steps:
- script: |
    sudo rm -fr ${BUILD_SOURCESDIRECTORY} || true
    sudo mkdir ${BUILD_SOURCESDIRECTORY}
    sudo chmod 777 ${BUILD_SOURCESDIRECTORY}
  displayName: 'Clean workspace'

- checkout: none

- script: |
    git clone ${{ parameters.repo }} ${BUILD_SOURCESDIRECTORY}
    git config --global --add safe.directory ${BUILD_SOURCESDIRECTORY}
    cd ${BUILD_SOURCESDIRECTORY}
    git checkout master
  displayName: "Checkout out master"

- script: |
    if [[ ! $(docker images | grep -i ${{ parameters.repoName }}:${{ parameters.repoTag }}) ]]; then
        docker build -f ${BUILD_SOURCESDIRECTORY}/.azure-pipelines/docker/${{parameters.dockerFileName}}.devel -t ${{ parameters.repoName }}:${{ parameters.repoTag }} .
    fi
    docker images | grep -i ${{ parameters.repoName }}
    if [[ $? -ne 0 ]]; then
      echo "NO Such Repo"
      exit 1
    fi
  displayName: "Build develop docker image"  
  
- script: |
    docker stop $(docker ps -aq)
    docker rm -vf $(docker ps -aq) || true
    env | sort
  displayName: 'Clean Docker'
 
- ${{ if eq(parameters.containerConfigName, 'commonContainer') }}:
  - task: Bash@3
    inputs:
      targetType: "inline"
      script: |
        docker run -dit --disable-content-trust --privileged --name=${{ parameters.containerName }} -v ${BUILD_SOURCESDIRECTORY}:/neural-compressor ${{ parameters.repoName }}:${{ parameters.repoTag }}
    displayName: "Docker run - commonContainer"

- ${{ if eq(parameters.containerConfigName, 'tfDatasetContainer') }}:
  - task: Bash@3
    inputs:
      targetType: "inline"
      script: |
        docker run -dit --disable-content-trust --privileged --name=${{ parameters.containerName }} \
        -v ${BUILD_SOURCESDIRECTORY}:/neural-compressor -v /tf_dataset:/tf_dataset ${{ parameters.repoName }}:${{ parameters.repoTag }}
    displayName: "Docker run - tfModelContainer"
