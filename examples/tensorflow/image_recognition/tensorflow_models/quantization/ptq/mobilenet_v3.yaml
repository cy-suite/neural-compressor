#
# Copyright (c) 2021 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


version: 1.0

model:                                               # mandatory. used to specify model specific information.
  name: mobilenet_v3
  framework: tensorflow                              # mandatory. supported values are tensorflow, pytorch, pytorch_ipex, onnxrt_integer, onnxrt_qlinear or mxnet; allow new framework backend extension.

device: cpu                                          # optional. default value is cpu, other value is gpu.

quantization:                                        # optional. tuning constraints on model-wise for advance user to reduce tuning space.
  calibration:
    sampling_size: 20, 50                            # optional. default value is 100. used to set how many samples should be used in calibration.
    dataloader:
      batch_size: 10
      dataset:
        ImageRecord:
          root: /path/to/calibration/dataset         # NOTE: modify to calibration dataset location if needed
      transform:
        BilinearImagenet: 
          height: 224
          width: 224
  recipes:                                           # optional. used to switch neural_compressor int8 receipts ON or OFF.
    scale_propagation_max_pooling: False
  model_wise:                                        # optional. tuning constraints on model-wise for advance user to reduce tuning space.
    activation:
      algorithm: minmax
    weight:
      granularity: per_channel
  op_wise: {
             'MobilenetV3/Conv/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_1/expand/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_2/expand/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_3/expand/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_3/project/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_4/expand/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_4/squeeze_excite/Conv/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_4/project/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_5/expand/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_5/squeeze_excite/Conv/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_5/project/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_6/expand/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_6/project/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_7/expand/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_7/project/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_8/expand/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_8/project/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_9/expand/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_9/project/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_10/expand/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_10/squeeze_excite/Conv/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_10/project/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_11/expand/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_11/squeeze_excite/Conv/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_11/project/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_12/expand/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_12/squeeze_excite/Conv/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_12/project/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_13/expand/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_13/squeeze_excite/Conv/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_13/project/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_14/expand/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_14/squeeze_excite/Conv/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/expanded_conv_14/project/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/Conv_1/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
             'MobilenetV3/Conv_2/Conv2D': {
               'activation':  {'dtype': ['fp32']},
             },
           }

evaluation:                                          # optional. required if user doesn't provide eval_func in neural_compressor.Quantization.
  accuracy:                                          # optional. required if user doesn't provide eval_func in neural_compressor.Quantization.
    metric:
      topk: 1                                        # built-in metrics are topk, map, f1, allow user to register new metric.
    dataloader:
      batch_size: 32
      dataset:
        ImageRecord:
          root: /path/to/evaluation/dataset          # NOTE: modify to calibration dataset location if needed
      transform:
        BilinearImagenet: 
          height: 224
          width: 224
  performance:                                       # optional. used to benchmark performance of passing model.
    iteration: 100
    configs:
      cores_per_instance: 4
      num_of_instance: 7
    dataloader:
      batch_size: 1
      dataset:
        ImageRecord:
          root: /path/to/evaluation/dataset          # NOTE: modify to calibration dataset location if needed
      transform:
        BilinearImagenet:
          height: 224
          width: 224

tuning:
  accuracy_criterion: 
    relative: 0.01
  exit_policy:
    timeout: 0                                       # optional. tuning timeout (seconds). default value is 0 which means early stop. combine with max_trials field to decide when to exit.
  random_seed: 9527                                  # optional. random seed for deterministic tuning.
